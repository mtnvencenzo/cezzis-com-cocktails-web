variables:
  serviceConnectionName: 'sc-vec-eus-default-svc-principal-001'
  terraformStateResourceGroup: 'rg-vec-eus-administration-001'
  terraformStateStorageAccount: 'stveceusterraformstat001'
  terraformStateContainerName: 'terraform-cocktails'
  containerRegistry: 'appr-vec-devops-project-latest-acr'
  imageRepository: 'cocktailsweb'
  dockerFileName: 'Dockerfile-CI'
  coverageArtifact: 'cocktails.web.codecoverage'
  buildArtifact: 'cocktails.web.build'
  buildConfiguration: 'Release'
  tag: '$(Build.SourceVersion)'

  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    branchType: main
  ${{ if ne(variables['Build.SourceBranchName'], 'main') }}: 
    branchType: pr

name: $(Build.DefinitionName)_$(branchType)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - cocktails.frontend/*

pool:
  vmImage: ubuntu-latest

stages:
##########################
### PREPARE BUILD
##########################
  - stage: PrepareBuild
    displayName: 'Prepare for build and test'
    jobs:
    - job: ApplyBuildTags
      displayName: 'Apply tags'
      steps:
      - script: |
          echo "##vso[build.addbuildtag]$(branchType)"
          echo "##vso[build.addbuildtag]cockails"
          echo "##vso[build.addbuildtag]web"
        displayName: 'Apply tags'

      - download: none
      - checkout: none  #skip loading source in this job (not needed)
      
    - template: ./list-file-changes.yml
      parameters:
        name: ListFilesChanges
        display: 'List file changes'
        rootDirectory: 'cocktails.frontend'

##########################
### BUILD
##########################
  - stage: Build
    displayName: 'Build and test'
    dependsOn: PrepareBuild
    jobs:

    - job: BuildUI
      displayName: 'Build and test ui'
      condition: not(or(failed(), canceled()))
      steps:
        - template: ui-build.yml
          parameters:
            branchType: ${{ variables.branchType }}
            workingDirectory: '$(System.DefaultWorkingDirectory)/cocktails.frontend/cocktails.web'
            artifactName: ${{ variables.buildArtifact }}
            dockerFileName: ${{ variables.dockerFileName }}
            coverageArtifactName: ${{ variables.coverageArtifact }}

    - deployment: DockerUI
      dependsOn:
        - BuildUI
      displayName: 'Docker build and push web'
      environment: dev
      timeoutInMinutes: 10

      pool:
        vmImage: ubuntu-latest

      strategy:
        runOnce:
          deploy:
            steps:
            - template: docker-build-push.yml
              parameters:
                containerRegistry: $(containerRegistry)
                imageRepository: $(imageRepository)
                tag: $(tag)
                artifactName: ${{ variables.buildArtifact }}
                displayName: 'Docker build and push web'
                branchType: ${{ variables.branchType }}
                dockerFileName: ${{ variables.dockerFileName }}

##########################
### DEPLOY PRD
##########################

  - stage: DeployPrd
    displayName: 'Deploy to production'
    dependsOn:
      - PrepareBuild
      - Build

    variables:
      keyVaultName: 'kv-vec-eus-prd-cockti-1'
      globalKeyVaultName: 'kv-vec-eus-glo-cockti-1'
      terraformStateBlobKey: 'cocktails/prd-cocktails-web.tfstate'

    jobs:
    - deployment: Terraform
      displayName: 'Terraform plan and apply'
      environment: prd
      timeoutInMinutes: 360
      
      pool:
        vmImage: ubuntu-latest

      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureKeyVault@2
              displayName: 'KeyVault Get B2c Terraform Client Id'
              inputs:
                azureSubscription: ${{ variables.serviceConnectionName }}
                keyVaultName: ${{ variables.globalKeyVaultName}}
                secretsFilter: 'prd-b2c-terraform-app-registration-client-id'

            - task: AzureKeyVault@2
              displayName: 'KeyVault Get B2c Terraform Client Secret'
              inputs:
                azureSubscription: ${{ variables.serviceConnectionName }}
                keyVaultName: ${{ variables.globalKeyVaultName}}
                secretsFilter: 'prd-b2c-terraform-app-registration-client-secret'

            - template: terraform-plan-and-apply.yml
              parameters:
                env: prd
                image_tag: $(tag)
                branchType: ${{ variables.branchType }}
                workingDirectory: '$(System.DefaultWorkingDirectory)/cocktails.frontend/.terraform'
                serviceConnectionName: '$(serviceConnectionName)'
                terraformStateResourceGroup: '$(terraformStateResourceGroup)'
                terraformStateStorageAccount: '$(terraformStateStorageAccount)'
                terraformStateContainerName: '$(terraformStateContainerName)'
                terraformStateBlobKey: '$(terraformStateBlobKey)'
                b2cTerraformAppRegistrationClientId: '$(prd-b2c-terraform-app-registration-client-id)'
                b2cTerraformAppRegistrationClientSecret: '$(prd-b2c-terraform-app-registration-client-secret)'

    - job: e2e
      displayName: 'E2e test ui'
      dependsOn:
        - Terraform
      steps:
        - task: AzureKeyVault@2
          displayName: 'KeyVault Get Cypress User Password'
          condition: and(not(or(failed(), canceled())), eq('${{ variables.branchType }}', 'main'))
          inputs:
            azureSubscription: ${{ variables.serviceConnectionName }}
            keyVaultName: ${{ variables.keyVaultName}}
            secretsFilter: 'e2e-cypress-user-password'

        - template: ui-cypress.yml
          parameters:
            env: prd
            branchType: ${{ variables.branchType }}
            workingDirectory: '$(System.DefaultWorkingDirectory)/cocktails.frontend/cocktails.web.e2e'
            baseUrl: 'https://www.cezzis.com'
            b2cUrl: 'https://cezzis.b2clogin.com/'
            b2cTenantId: 'fb512a9c-5b44-41ab-8042-6465769f16c9'
            b2cClientId: '84744194-da27-410f-ae0e-74f5589d4c96'
            b2cUserObjectId: '41598664-1466-4e3e-b28c-dfe9837e462e'
            b2cUserEmail: 'rvecchi+cypress@gmail.com'
            b2cUserPassword: '$(e2e-cypress-user-password)'

          