parameters:
  - name: env
    type: string
  - name: serviceConnectionName
    type: string
  - name: terraformStateResourceGroup
    type: string
  - name: terraformStateStorageAccount
    type: string
  - name: terraformStateContainerName
    type: string
  - name: terraformStateBlobKey
    type: string
  - name: branchType
    type: string
  - name: workingDirectory
    type: string
  - name: image_tag
    type: string
  - name: b2cTerraformAppRegistrationClientId
    type: string
  - name: b2cTerraformAppRegistrationClientSecret
    type: string


steps:
- checkout: self
  persistCredentials: true
  displayName: 'Checkout repository'

- task: TerraformInstaller@1
  displayName: 'Terraform > Install Latest'
  inputs:
    terraformVersion: 'latest'

- script: |
    git config --global url."https://$SYSTEM_ACCESSTOKEN@dev.azure.com".insteadOf "https://vecchi@dev.azure.com"
  displayName: 'Set extra header'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    
- task: TerraformTaskV4@4
  displayName: 'Terraform > Init'
  inputs:
    command: 'init'
    provider: 'azurerm'
    ensureBackend: true
    workingDirectory: '${{ parameters.workingDirectory }}'
    backendServiceArm: '${{ parameters.serviceConnectionName }}'
    backendAzureRmResourceGroupName: '${{ parameters.terraformStateResourceGroup }}'
    backendAzureRmStorageAccountName: '${{ parameters.terraformStateStorageAccount }}'
    backendAzureRmContainerName: '${{ parameters.terraformStateContainerName }}'
    backendAzureRmKey: '${{ parameters.terraformStateBlobKey }}'

- task: TerraformTaskV4@4
  displayName: 'Terraform > Validate'
  inputs:
    command: 'validate'
    provider: 'azurerm'
    workingDirectory: '${{ parameters.workingDirectory }}'

- task: TerraformTaskV4@4
  displayName: 'Terraform > Plan'
  inputs:
    command: 'plan'
    provider: 'azurerm'
    workingDirectory: '${{ parameters.workingDirectory }}'
    environmentServiceNameAzureRM: '${{ parameters.serviceConnectionName }}'
    commandOptions: '-var "b2c_terraform_app_registration_client_id=${{ parameters.b2cTerraformAppRegistrationClientId }}" -var "b2c_terraform_app_registration_client_secret=${{ parameters.b2cTerraformAppRegistrationClientSecret }}" -var="image_tag=${{ parameters.image_tag }}" -var-file="environment_vars/${{ parameters.env }}.tfvars"'

- task: TerraformTaskV4@4
  displayName: 'Terraform > Apply'
  condition: and(not(or(failed(), canceled())), eq('${{ parameters.branchType }}', 'main'))
  inputs:
    command: 'apply'
    provider: 'azurerm'
    workingDirectory: '${{ parameters.workingDirectory }}'
    environmentServiceNameAzureRM: '${{ parameters.serviceConnectionName }}'
    commandOptions: '-var "b2c_terraform_app_registration_client_id=${{ parameters.b2cTerraformAppRegistrationClientId }}" -var "b2c_terraform_app_registration_client_secret=${{ parameters.b2cTerraformAppRegistrationClientSecret }}" -var="image_tag=${{ parameters.image_tag }}" -var-file="environment_vars/${{ parameters.env }}.tfvars" -auto-approve'

- script: |
    echo "##vso[build.addbuildtag]terraform"
  displayName: 'Apply terraform tag'
  condition: and(not(or(failed(), canceled())), eq('${{ parameters.branchType }}', 'main'))

- script: |
    tag="ui-prod-$(date +%Y%m%dT%H%M%S%z)"
    git tag $tag
    git push origin $tag HEAD:refs/heads/main
  displayName: 'Git Tag'
  condition: and(not(or(failed(), canceled())), eq('${{ parameters.branchType }}', 'main'))
  workingDirectory: $(Build.SourcesDirectory)